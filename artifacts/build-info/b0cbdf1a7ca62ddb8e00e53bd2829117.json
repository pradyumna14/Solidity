{
	"id": "b0cbdf1a7ca62ddb8e00e53bd2829117",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"fallbackFunction.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/*\r\nIt’s generally a good practice to include these functions if your contract might receive Ether or handle unexpected interactions. Including `receive()` ensures the contract can accept direct Ether transfers, while `fallback()` covers scenarios with unexpected function calls or data. However, if your contract doesn't need to handle Ether or unexpected function calls, you might not need them. Tailor your contract’s functions based on its specific requirements.\r\n*/\r\n//understand event, emit to know more about this!\r\ncontract Fallback {\r\n    fallback() external payable {\r\n\r\n    }\r\n    receive() external payable{\r\n\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"fallbackFunction.sol": {
				"Fallback": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fallbackFunction.sol\":589:701  contract Fallback {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"fallbackFunction.sol\":589:701  contract Fallback {... */\n      mstore(0x40, 0x80)\n      stop\n\n    auxdata: 0xa2646970667358221220636a92a0ccd32c2f253ac1e1c01497bb90a72c596f41ba04a159fd1462cdc24c64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50603c80601a5f395ff3fe608060405200fea2646970667358221220636a92a0ccd32c2f253ac1e1c01497bb90a72c596f41ba04a159fd1462cdc24c64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3C DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x6A92A0CC 0xD3 0x2C 0x2F 0x25 GASPRICE 0xC1 0xE1 0xC0 EQ SWAP8 0xBB SWAP1 0xA7 0x2C MSIZE PUSH16 0x41BA04A159FD1462CDC24C64736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "589:112:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405200fea2646970667358221220636a92a0ccd32c2f253ac1e1c01497bb90a72c596f41ba04a159fd1462cdc24c64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x6A92A0CC 0xD3 0x2C 0x2F 0x25 GASPRICE 0xC1 0xE1 0xC0 EQ SWAP8 0xBB SWAP1 0xA7 0x2C MSIZE PUSH16 0x41BA04A159FD1462CDC24C64736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "589:112:0:-:0;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12000",
								"executionCost": "64",
								"totalCost": "12064"
							},
							"external": {
								"": "18"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 589,
									"end": 701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 701,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220636a92a0ccd32c2f253ac1e1c01497bb90a72c596f41ba04a159fd1462cdc24c64736f6c634300081b0033",
									".code": [
										{
											"begin": 589,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 589,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 589,
											"end": 701,
											"name": "STOP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"fallbackFunction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fallbackFunction.sol\":\"Fallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fallbackFunction.sol\":{\"keccak256\":\"0xa92262f0191a9d0f7561da7ec61c92b8f16681f89d7a89fd089bfb5eea0af5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02b9fc440aa8a289998d0ab4cb4ac6accdb3d8555a4891143b32bc610ac76b3a\",\"dweb:/ipfs/QmbZujLFz8JhmvtqNXTCWUAJk8HAeGC5R39YeoKeTr4AsJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"fallbackFunction.sol": {
				"ast": {
					"absolutePath": "fallbackFunction.sol",
					"exportedSymbols": {
						"Fallback": [
							10
						]
					},
					"id": 11,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Fallback",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "Fallback",
							"nameLocation": "598:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "642:10:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:0"
									},
									"scope": 10,
									"src": "614:38:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "684:10:0",
										"statements": []
									},
									"id": 9,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:0:0"
									},
									"scope": 10,
									"src": "658:36:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 11,
							"src": "589:112:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:666:0"
				},
				"id": 0
			}
		}
	}
}